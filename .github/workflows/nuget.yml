# .NET Core Workflow:
# [Add Description]
name: .Net Core  
on:
  push:
  pull_request:
env:
  PROJECT_DIR: "./ci_experiment/"
  PACKAGE_NAME: "ci_experiment"
  DEV_PACKAGE_NAME: "ci_experiment-dev"
  PUSH_PACK_NON_MASTER_STRING: "push-dev-pack"
  NUGET_SOURCE: "https://api.nuget.org/v3/index.json"
  MYGET_SOURCE: "https://www.myget.org/F/ci_experiment_dev/api/v3/index.json" 
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ] #, windows-latest, macos-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1.5.0
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build -c Release --no-restore
      - name: Test
        run: dotnet test
  packandpush:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # avoid shallow clone so nerdbank.gitversioning can do its work.
      - name: Run Nerdbank.GitVersioning
        id: nb
        uses: dotnet/nbgv@v0.3.1
        with:
          # The path to the directory for which the version should be determined. This should be at or below the directory containing the version.json file. Default is repo root directory.:  
          path: . #version.json in root
      - name: If pushing to master, pack a RELEASE version with 1.2.3 format and upload to nuget.org
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          cd $PROJECT_DIR
          dotnet pack -c Release -p:Version="${{ steps.nb.outputs.SimpleVersion }}" -p:PackageID="${{ env.PACKAGE_NAME }}" -o . 
          dotnet nuget push *.nupkg -s ${{ env.NUGET_SOURCE }} -k ${{secrets.NUGET_API_KEY}} --skip-duplicate 
      - name: If pushing to master, pack a DEBUG version with 0.0.0.0 format and upload to myget under -dev name
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          cd $PROJECT_DIR
          rm *.nupkg
          dotnet pack -c Debug -p:Version="${{ steps.nb.outputs.Version }}" -p:PackageID="${{ env.DEV_PACKAGE_NAME }}" -o .
          dotnet nuget push *.nupkg -s ${{ env.MYGET_SOURCE }} -k ${{secrets.MYGET_API_KEY}}
      - name: If pushing, but NOT master, and top git commit contains string $PUSH_PACK_NON_MASTER_STRING pack a DEBUG version using nerdbank generated metadata version under dev name and upload to myget under dev name
        if: github.ref != 'refs/heads/master' && contains(github.event.head_commit.message, 'push-dev-pack' && github.event_name == 'push')
        run: |
          cd $PROJECT_DIR
          dotnet pack -c Debug -p:Version="${{ steps.nb.outputs.SemVer2 }}" -p:PackageID="${{ env.DEV_PACKAGE_NAME }}" -o .
          dotnet nuget push *.nupkg -s ${{ env.MYGET_SOURCE }} -k ${{secrets.MYGET_API_KEY}}
          rm *.nupkg
      - name: If we are NOT pushing to master, or it's a pull request, pack a DEBUG version using nerdbank git metadata version under dev name (for artifact upload)
        if: github.ref != 'refs/heads/master' || github.event_name == 'pull'
        run: |
           dotnet pack -c Debug -p:Version="${{ steps.nb.outputs.SemVert2 }}" -p:PackageID="${{ env.DEV_PACKAGE_NAME }}" -o .
      - name: Upload (latest) built package as action artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}${{ steps.nb.outputs.Version }}${{ steps.nb.outputs.BuildMetadataFragment }}
          path: ${{ env.PROJECT_DIR }}*.nupkg
      
